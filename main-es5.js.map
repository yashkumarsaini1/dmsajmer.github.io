{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/auth.guard.ts","webpack:///src/app/auth.service.ts","webpack:///src/app/capitalize.pipe.ts","webpack:///src/app/comments/comments.component.ts","webpack:///src/app/comments/comments.component.html","webpack:///src/app/create/create.component.ts","webpack:///src/app/create/create.component.html","webpack:///src/app/edit-profile/edit-profile.component.ts","webpack:///src/app/edit-profile/edit-profile.component.html","webpack:///src/app/home/home.component.ts","webpack:///src/app/home/home.component.html","webpack:///src/app/login/login.component.ts","webpack:///src/app/login/login.component.html","webpack:///src/app/menu/menu.component.ts","webpack:///src/app/menu/menu.component.html","webpack:///src/app/myblogs/myblogs.component.ts","webpack:///src/app/myblogs/myblogs.component.html","webpack:///src/app/post/post.component.ts","webpack:///src/app/post/post.component.html","webpack:///src/app/profile/profile.component.ts","webpack:///src/app/profile/profile.component.html","webpack:///src/app/signup/signup.component.ts","webpack:///src/app/signup/signup.component.html","webpack:///src/app/view/view.component.ts","webpack:///src/app/view/view.component.html","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","routes","path","redirectTo","pathMatch","component","canActivate","AppRoutingModule","forRoot","imports","AppComponent","title","selector","templateUrl","styleUrls","firebaseConfig","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","AppModule","declarations","providers","bootstrap","AuthGuard","router","next","state","resole","reject","onAuthStateChanged","user","navigate","providedIn","AuthService","email","password","signInWithEmailAndPassword","firstName","lastName","createUserWithEmailAndPassword","response","console","log","randomNumber","Math","floor","random","updateProfile","displayName","photoURL","error","CapitalizePipe","value","firstChar","substring","allOtherChars","length","newValue","toUpperCase","toLowerCase","name","CommentsComponent","comment","comments","loggedIn","getComments","collection","add","text","post","postId","owner","currentUser","uid","ownerName","created","FieldValue","serverTimestamp","data","where","orderBy","get","docs","forEach","commentRef","push","CreateComponent","postCreated","editorConfig","editable","spellcheck","height","minHeight","maxHeight","width","minWidth","translate","enableToolbar","showToolbar","placeholder","defaultParagraphSeparator","defaultFontName","defaultFontSize","fonts","customClasses","tag","uploadUrl","uploadWithCredentials","sanitize","toolbarPosition","toolbarHiddenButtons","content","emit","createPost","EditProfileComponent","getProfile","userId","doc","documentSnapshot","message","photoUrl","update","split","hobbies","interests","bio","HomeComponent","amount","dateOfBirth","Date","LoginComponent","fb","authService","myForm","group","required","form","login","userError","onSubmit","MenuComponent","signOut","MyblogsComponent","posts","getPosts","querySnapshot","err","onPostCreated","PostComponent","onDelete","postData","ProfileComponent","activatedRoute","snapshot","paramMap","getUsersPosts","settings","timestampsInSnapshots","SignupComponent","minLength","confirmPassword","signupform","signup","set","ViewComponent","ngZone","docSnapshot","run","environment","production","bootstrapModule"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { LoginComponent } from './login/login.component';\nimport { HomeComponent } from './home/home.component';\nimport { MyblogsComponent } from './myblogs/myblogs.component';\nimport { ProfileComponent } from './profile/profile.component';\nimport { AuthGuard } from './auth.guard';\nimport { ViewComponent} from './view/view.component';\nimport {EditProfileComponent} from './edit-profile/edit-profile.component';\n\nconst routes: Routes = [{\n  path:'', redirectTo: 'home',pathMatch:'full'\n},{\n  path: 'home', component: HomeComponent\n},{\n  path: 'login', component: LoginComponent\n},{\n  path: 'myblogs',component: MyblogsComponent , canActivate:[AuthGuard]\n},{\n  path: 'edit-profile/:id',component: EditProfileComponent\n},{\n  path: 'profile/:id',component: ProfileComponent\n},{\n  path: 'view/:postId', component: ViewComponent \n},{\n  path: '**',redirectTo:'home'\n}]\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\n\n\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\n\nexport class AppComponent {\n  title = 'Scribe';\n}\n","<app-menu></app-menu>\n<router-outlet></router-outlet>\n<html>\n  <head>\n    <title>Scribe</title>\n  </head>\n  <body>\n  </body>\n</html>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport {FormsModule,ReactiveFormsModule} from '@angular/forms';\n\nimport * as firebase from 'firebase/app';\nimport 'firebase/auth';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { SignupComponent } from './signup/signup.component';\nimport { LoginComponent } from './login/login.component';\nimport { HomeComponent } from './home/home.component';\nimport { CapitalizePipe } from './capitalize.pipe';\nimport { MenuComponent } from './menu/menu.component';\nimport { MyblogsComponent } from './myblogs/myblogs.component';\nimport { ProfileComponent } from './profile/profile.component';\nimport { CreateComponent } from './create/create.component';\nimport { AngularEditorModule} from '@kolkov/angular-editor';\nimport { HttpClientModule} from '@angular/common/http';\nimport { PostComponent } from './post/post.component';\nimport { ViewComponent } from './view/view.component';\nimport { CommentsComponent } from './comments/comments.component';\nimport { EditProfileComponent } from './edit-profile/edit-profile.component';\n\nlet firebaseConfig = {\n  apiKey: \"AIzaSyBRJ1tEDwndXH_JgnABvlUmgScbOUBYPDc\",\n  authDomain: \"scribe-ed63b.firebaseapp.com\",\n  databaseURL: \"https://scribe-ed63b.firebaseio.com\",\n  projectId: \"scribe-ed63b\",\n  storageBucket: \"scribe-ed63b.appspot.com\",\n  messagingSenderId: \"474409021284\",\n  appId: \"1:474409021284:web:bc98dc6f77005b167b9471\",\n  measurementId: \"G-5QSYK64ZJM\"\n};\nfirebase.initializeApp(firebaseConfig);\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    SignupComponent,\n    LoginComponent,\n    HomeComponent,\n    CapitalizePipe,\n    MenuComponent,\n    MyblogsComponent,\n    ProfileComponent,\n    CreateComponent,\n    PostComponent,\n    ViewComponent,\n    CommentsComponent,\n    EditProfileComponent,\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    FormsModule,\n    ReactiveFormsModule,\n    AngularEditorModule,\n    HttpClientModule,          \n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Injectable } from '@angular/core';\nimport { CanActivate, ActivatedRouteSnapshot,\n   RouterStateSnapshot,UrlTree, Router } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport * as firebase from 'firebase/app';\nimport 'firebase/auth';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthGuard implements CanActivate {\n\n  constructor(private router: Router){}\n  canActivate(\n    next: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot): Observable<boolean | UrlTree> | Promise<boolean | UrlTree> | boolean | UrlTree {\n    \n      return new Promise((resole,reject)=>{\n        firebase.auth().onAuthStateChanged((user)=>{\n          if(user){\n            resole(true);\n          }\n          else{\n            this.router.navigate(['/login']);\n            resole(false);\n          }\n        })\n      })\n  }\n  \n}\n","import { Injectable } from '@angular/core';\nimport * as firebase from 'firebase/app';\nimport 'firebase/auth';\nimport { ReturnStatement } from '@angular/compiler';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n\n  constructor() { }\n\n  login(email:string, password:string){\n     return firebase.auth().signInWithEmailAndPassword(email,password);\n\n  }\n\n  signup(email:string, password:string,firstName:string,lastName:string){\n    \n\n    return new Promise((resolve, reject)=>{\n\n    firebase.auth().createUserWithEmailAndPassword(email,password).then(\n      (response)=> {\n        console.log(response);\n        let randomNumber=Math.floor(Math.random()*1000)\n\n        response.user.updateProfile({\n          displayName: firstName+\" \"+lastName,\n          photoURL:\"https://api.adorable.io/avatars/\"+ randomNumber\n        }).then(()=>\n        {\n          resolve(response.user);\n        }).catch((error)=>\n        {\n          reject(error);\n        })\n\n    }).catch((error)=>\n    {\n      reject(error);\n    })\n  })\n}\n}","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'capitalize'\n})\nexport class CapitalizePipe implements PipeTransform {\n\n  transform(value: string, ...args: unknown[]): unknown {\n    let firstChar = value.substring(0, 1);\n    let allOtherChars = value.substring(1,value.length);\n    let newValue = firstChar.toUpperCase()+allOtherChars.toLowerCase();\n    \n    return newValue;\n\n  }\n\n}\n","import { Component, OnInit, Input } from '@angular/core';\nimport * as firebase from 'firebase/app';\nimport 'firebase/auth';\nimport 'firebase/firestore';\n\n@Component({\n  selector: 'app-comments',\n  templateUrl: './comments.component.html',\n  styleUrls: ['./comments.component.css']\n})\nexport class CommentsComponent implements OnInit {\n\n  comment: string = \"\";\n  comments: any[] = [];\n  loggedIn: boolean = false;\n\n  @Input(\"postId\") postId: string;\n\n  constructor() { \n\n    firebase.auth().onAuthStateChanged((user) => {\n      if(user) {\n        this.loggedIn = true;\n      } else {\n        this.loggedIn = false;\n      }\n    })\n\n  }\n\n  ngOnInit() {\n    this.getComments();\n  }\n\n  postComment(){\n\n    if(this.comment.length < 5){\n      return;\n    }\n\n    firebase.firestore().collection(\"comments\").add({\n      text: this.comment,\n      post: this.postId,\n      owner: firebase.auth().currentUser.uid,\n      ownerName: firebase.auth().currentUser.displayName,\n      created: firebase.firestore.FieldValue.serverTimestamp()\n    }).then((data) => {\n      console.log(\"Comment is saved!\")\n      this.getComments();\n    }).catch((error) => {\n      console.log(error);\n    })\n\n  }\n\n  getComments(){\n\n    this.comments = [];\n\n    firebase.firestore().collection(\"comments\")\n    .where(\"post\", \"==\", this.postId)\n    .orderBy(\"created\", \"desc\")\n    .get().then((data) => {\n\n      data.docs.forEach((commentRef)=>{\n        this.comments.push(commentRef.data())\n      })\n\n    })\n\n  }\n\n\n}","<div class=\"row mt-5\" *ngIf=\"loggedIn\">\n    <div class=\"col\">\n      <textarea rows=\"2\" placeholder=\"Your comment here...\" [(ngModel)]=\"comment\"></textarea>\n    </div>\n  </div>\n  \n  <div class=\"row\" *ngIf=\"loggedIn\">\n    <div class=\"col\">\n      <div class=\"pull-right\">\n        <button class=\"btn btn-primary\" (click)=\"postComment()\">Post</button>\n      </div>\n    </div>\n  </div>\n  \n  <div class=\"alert alert-primary\" *ngIf=\"!loggedIn\">\n    Please login to post a comment.\n  </div> \n  \n  <h4>Comments ({{ comments.length }})</h4>\n  \n  <div class=\"row mt-3\" *ngFor=\"let comment of comments\">\n    <div class=\"col\">\n      <div class=\"card\">\n        <div class=\"card-header\">\n          {{ comment.ownerName }} <i>commented on </i> {{ comment.created.toDate() | date: 'MMM dd, yyyy h:mm a'}}\n        </div>\n        <div class=\"card-body\">\n          <div class=\"card-text\">\n            {{ comment.text }}\n          </div>\n        </div>\n      </div>\n  \n    </div>\n  </div>","import { Component, OnInit,Output,EventEmitter } from '@angular/core';\nimport * as firebase from 'firebase/app';\nimport 'firebase/firestore';\nimport 'firebase/auth';\nimport { AngularEditorConfig } from '@kolkov/angular-editor';\n\n\n@Component({\n  selector: 'app-create',\n  templateUrl: './create.component.html',\n  styleUrls: ['./create.component.css']\n})\nexport class CreateComponent implements OnInit {\n\n  editorConfig: any;\n  title: string;\n  content: string;\n  @Output('postCreated') postCreated = new EventEmitter();\n   \n\n  constructor() { \n    this.editorConfig = {\n      editable: true,\n        spellcheck: true,\n        height: 'auto',\n        minHeight: '0',\n        maxHeight: 'auto',\n        width: 'auto',\n        minWidth: '0',\n        translate: 'yes',\n        enableToolbar: true,\n        showToolbar: false,\n        placeholder: 'Enter text here...',\n        defaultParagraphSeparator: '',\n        defaultFontName: '',\n        defaultFontSize: '',\n        fonts: [\n          {class: 'arial', name: 'Arial'},\n          {class: 'times-new-roman', name: 'Times New Roman'},\n          {class: 'calibri', name: 'Calibri'},\n          {class: 'comic-sans-ms', name: 'Comic Sans MS'}\n        ],\n        customClasses: [\n        {\n          name: 'quote',\n          class: 'quote',\n        },\n        {\n          name: 'redText',\n          class: 'redText'\n        },\n        {\n          name: 'titleText',\n          class: 'titleText',\n          tag: 'h1',\n        },\n      ],\n      uploadUrl: 'v1/image',\n      uploadWithCredentials: false,\n      sanitize: true,\n      toolbarPosition: 'top',\n      toolbarHiddenButtons: [\n        ['bold', 'italic'],\n        ['fontSize']\n      ]\n  };\n    \n   }\n\n  ngOnInit() {\n  }\n\n  createPost(){\n\n    firebase.firestore().collection(\"posts\").add({\n      title: this.title,\n      content: this.content,\n      owner: firebase.auth().currentUser.uid,\n      created: firebase.firestore.FieldValue.serverTimestamp()\n    }).then((data) => {\n      console.log(data);\n      this.postCreated.emit();\n    }).catch((error) => {\n      console.log(error);\n    })\n\n  }\n\n}","<div class=\"row mt-5\">\n    <div class=\"col\">\n  \n      <div class=\"form-group\">\n        <label>Post Title</label>\n        <input type=\"text\" class=\"form-control\" id=\"title\" placeholder=\"Post Title\" name=\"title\" [(ngModel)]=\"title\">\n      </div>\n  \n      <div class=\"form-group\">\n        <label>Post Content</label>\n        <angular-editor [placeholder]=\"'Enter text here...'\" [config]=editorConfig [(ngModel)]=\"content\"></angular-editor>\n    </div>\n  \n      <div class=\"form-group float-right\">\n        <button (click)=\"createPost()\" class=\"btn btn-warning round\">Submit</button>\n      </div>\n  \n    </div>\n  </div>","import { Component, OnInit } from '@angular/core';\nimport * as firebase from 'firebase/app';\nimport 'firebase/firestore';\nimport 'firebase/auth';\n\n@Component({\n  selector: 'app-edit-profile',\n  templateUrl: './edit-profile.component.html',\n  styleUrls: ['./edit-profile.component.css']\n})\nexport class EditProfileComponent implements OnInit {\n\n  user: any = {};\n  message: string;\n\n  constructor() {\n    this.getProfile();\n  }\n\n  ngOnInit() {\n  }\n\n  getProfile(){\n\n    let userId = firebase.auth().currentUser.uid;\n\n    firebase.firestore().collection(\"users\").doc(userId).get().then((documentSnapshot) => {\n\n      this.user = documentSnapshot.data();\n      this.user.displayName = this.user.firstName + \" \" + this.user.lastName;\n      this.user.id = documentSnapshot.id;\n      console.log(this.user);\n\n    }).catch((error) => {\n      console.log(error);\n    })\n\n  }\n\n  update(){\n\n    this.message = \"Updating Profile...\";\n\n    firebase.auth().currentUser.updateProfile({\n      displayName: this.user.displayName, photoURL: this.user.photoUrl\n    }).then(() => {\n\n      let userId = firebase.auth().currentUser.uid;\n      firebase.firestore().collection(\"users\").doc(userId).update({\n        firstName: this.user.displayName.split(' ')[0],\n        lastName: this.user.displayName,\n        hobbies: this.user.hobbies,\n        interests: this.user.interests,\n        bio: this.user.bio\n      }).then(() => {\n\n        this.message = \"Profile Updated Successfully.\";\n\n      }).catch((error) => {\n        console.log(error)\n      })\n\n\n    }).catch((error) => {\n      console.log(error)\n    })\n\n  }\n\n}","<div class=\"row mt-5\">\n    <div class=\"offset-sm-1 col-sm-10\">\n      <div class=\"card-text-blank bg-light\">\n        <div class=\"card-body\">\n          <div class=\"card-title\">\n            <h1>Profile</h1>\n          </div>\n          <div class=\"card-text\">\n            <div class=\"row\">\n              <div class=\"col-sm-4\">\n                <img [src]=\"user.photoURL\" width=\"256\" height=\"256\" class=\"img-circle\">\n              </div>\n              <div class=\"col-sm-8\">\n                <div class=\"form-group row\">\n                  <label class=\"col-sm-2 col-form-label\">Name</label>\n                  <div class=\"col-sm-8\">\n                    <input type=\"text\" class=\"form-control\" placeholder=\"First name\" [(ngModel)]=\"user.displayName\">\n                  </div>\n                </div>\n  \n                <div class=\"form-group row\">\n                  <label class=\"col-sm-2 col-form-label\">Email</label>\n                  <div class=\"col-sm-8\">\n                    <input type=\"email\" readonly class=\"form-control\" [(ngModel)]=\"user.email\">\n                  </div>\n                </div>\n  \n                <div class=\"form-group row\">\n                  <label class=\"col-sm-2 col-form-label\">Bio</label>\n                  <div class=\"col-sm-8\">\n                    <textarea class=\"form-control\" rows=6 placeholder=\"Tell us something about yourself...\" [(ngModel)]=\"user.bio\"></textarea>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n  \n  <div class=\"row\">\n    <div class=\"offset-sm-1 col-sm-10\">\n      <div class=\"card text-blank bg-light\">\n        <div class=\"card-body\">\n          <div class=\"card-text\">\n            <div class=\"row\">\n              <div class=\"col-sm-6\">\n                <div class=\"form-group\">\n                  <label class=\"col-form-label\">Your Interests</label>\n                  <div class=\"col-sm-12\">\n                    <textarea class=\"form-control\" rows=6 placeholder=\"I like to read sci-fi novels...\" [(ngModel)]=\"user.interests\"></textarea>\n                  </div>\n                </div>\n              </div>\n              <div class=\"col-sm-6\">\n                <div class=\"form-group\">\n                  <label class=\"col-form-label\">Your Hobbies <small><i>(Comma Separate Each Hobby)</i></small></label>\n                  <div class=\"col-sm-12\">\n                    <textarea class=\"form-control\" rows=6 placeholder=\"Reading, Travelling, Gaming\" [(ngModel)]=\"user.hobbies\"></textarea>\n                  </div>\n                </div>\n              </div>\n            </div>\n  \n          </div>\n          \n          <button class=\"btn btn-warning round pull-right\" (click)=\"update()\">Update</button>\n          <div class=\"alert alert-success fade show pull-left\" role=\"alert\" *ngIf=\"message\">\n              {{message}}\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n\n  name: string=\"iNteNsHala\";\n  amount: number=123456;\n  dateOfBirth=new Date();\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<app-signup></app-signup>\r\n\r\n<div class=\"row\">\r\n  <div class=\"col-sm-6 text-right pt-5\">\r\n    <img class=\"align-middle m-5\" height=\"300px\" src=\"/assets/What-Is-Scribe-Image.png\">\r\n  </div>\r\n  <div class=\"col-sm-4\">\r\n    <h2 class=\"mx-5 my-5\">What is Scribe?</h2>\r\n    <h6 class=\"mx-5 my-1\">\r\n      Scribe is a thought sharing platform where you can share your thoughts and craziest\r\n       ideas with the world. You can also interact with\r\n        other users by commenting on their posts. \r\n      <br/><br/>\r\n      Create a free account and get started.\r\n      <br/><br/>\r\n      Let's get started!\r\n    </h6>\r\n  </div>\r\n</div>\r\n\r\n<hr/>\r\n\r\n<div class=\"row\">\r\n  <div class=\"offset-sm-2 col-sm-8 text-center pt-5 mt-5\">\r\n    <h5>Contact Us</h5>\r\n\r\n    <div class=\"row\">\r\n      <div class=\"offset-sm-2 col-sm-4 text-left pt-5 vertical-divider mt-5 \">\r\n        <i class=\"fa fa-phone mt-3\"></i> Available Soon...\r\n        <br/>\r\n        <i class=\"fa fa-envelope mt-3\"></i> yashallendms@gmail.com\r\n        <br/>\r\n        <i class=\"fa fa-facebook mt-3\"></i> Internshala Trainings\r\n        <br/>\r\n      </div>\r\n\r\n      <div class=\"col-sm-6 text-left py-5 my-5 px-5\">\r\n        <i class=\"fa fa-map-marker mt-3\"></i> Available Soon...<br/>\r\n        <i class=\"fa fa-map-marker mt-1 invisible\"></i> Available Soon...<br/>\r\n        <i class=\"fa fa-map-marker mt-1 invisible\"></i> Available Soon...<br/>\r\n        <i class=\"fa fa-map-marker mt-1 invisible\"></i> Available Soon...<br/>\r\n      </div>\r\n    </div>\r\n\r\n  </div>\r\n</div>","import { Component, OnInit } from '@angular/core'; \nimport{ FormBuilder, FormGroup, FormControl, Validators}  from '@angular/forms';\nimport { AuthService} from '../auth.service';\nimport {Router} from '@angular/router';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n  \n  myForm: FormGroup;\n  message: string=\"\";\n  userError: any;\n\n\n  constructor(public fb: FormBuilder, public authService: AuthService,\n    public router: Router) {\n    this.myForm= this.fb.group({\n      email: [\"\",Validators.required],\n      password: [\"\",Validators.required]\n    })\n   }\n\n  ngOnInit(): void {\n  }\n  onSubmit(form){\n    this.authService.login(form.value.email, form.value.password)\n    .then((data)=>{\n      console.log(data);\n      this.message=\"You have been logged in successfully.\"\n\n      this.router.navigate(['/myblogs'])\n    }).catch((error)=>\n    {\n      console.log(error);\n      this.userError=error;\n    })\n  }\n\n}\n","    <div class=\"row background\">\n    <div class=\"offset-sm-4 col-sm-4\">\n\n        <div class=\"card text-blank\">\n            <div class=\"card-body\">\n                <div class=\"card-title text-center\">\n                    <h5>Login using your email</h5>\n                </div>\n                <form [formGroup]=\"myForm\" (ngSubmit)=\"onSubmit(myForm)\">\n                    <div class=\"form-group\">\n                        <input type=\"email\" class=\"form-control\" placeholder=\"Enter email\" name=\"email\"\n                        [formControl]=\"myForm.controls['email']\">\n                    </div>\n                    <div class=\"alert alert-danger\" *ngIf=\"!myForm.controls['email'].valid && myForm.controls['email'].touched\">\n                        A valid Email is required.\n                    </div>\n                    <div class=\"form-group\">\n                        <input type=\"password\" class=\"form-control\" placeholder=\"Enter password\" name=\"password\"\n                        [formControl]=\"myForm.controls['password']\">\n                    </div>\n                    <div class=\"alert alert-danger\" *ngIf=\"!myForm.controls['password'].valid && myForm.controls['password'].touched\">\n                        Password is required.\n                    </div>\n                    <div class=\"text-center\">\n                        <button type=\"submit\" class=\"btn btn-block btn-warning round\" [disabled]=\"!myForm.valid\">Submit</button>\n                    </div>\n\n                </form>\n                <div class=\"text-center mt-3\">\n                    <button class=\"btn btn-link\" routerLink=\"/home\">Don't have an\n                    account? Create One</button>\n                    <br><br><br><br><br><br><br><br>\n                </div>\n            </div>\n            <div class=\"alert alert-success\" *ngIf=\"message.length> 0\"> \n                {{message}}\n            </div>\n            <div class=\"alert alert-danger\" *ngIf=\"userError\">\n                {{userError.message}}\n            </div>\n        </div>\n    </div>\n    \n</div>\n\n\n","import { Component, OnInit } from '@angular/core';\nimport * as firebase from 'firebase/app';\nimport 'firebase/auth';\n\n@Component({\n  selector: 'app-menu',\n  templateUrl: './menu.component.html',\n  styleUrls: ['./menu.component.css']\n})\nexport class MenuComponent implements OnInit {\n\n  loggedIn: boolean = false;\n  user: any;\n\n  constructor() {\n\n    this.user = firebase.auth().currentUser;\n    if(this.user) {\n      this.loggedIn = true;\n    } else {\n      this.loggedIn = false;\n    }\n\n    firebase.auth().onAuthStateChanged((user) => {\n      this.user = user;\n      if(user){\n        this.loggedIn = true;\n      } else {\n        this.loggedIn = false;\n      }\n\n    })\n\n  }\n\n  ngOnInit() {\n  }\n\n  logout(){\n    firebase.auth().signOut();\n  }\n\n}","<nav class=\"navbar navbar-expand-lg navbar-light bg-primary\">\n  <a class=\"navbar-brand\" href=\"#\">\n    <img src=\"assets/Scribe-Logo.png\">\n  </a>\n  <button class=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" \n  data-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\"\n   aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n    <span class=\"navbar-toggler-icon\"></span>\n  </button>\n  <div class=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\n    <ul class=\"navbar-nav mr-auto\">\n\n      <li class=\"nav-item\" routerLinkActive=\"active\" data-toggle=\"collapse\"\n      data-target=\".navbar-collapse\" *ngIf=\"!loggedIn\">\n        <a class=\"nav-link\" routerLink=\"/home\">Home </a>\n      </li>\n      <li class=\"nav-item\" routerLinkActive=\"active\" data-toggle=\"collapse\"\n      data-target=\".navbar-collapse\" *ngIf=\"loggedIn\">\n        <a class=\"nav-link\" routerLink=\"/myblogs\">Home</a>\n      </li>\n    </ul>\n\n    <ul class=\"navbar-nav ml-auto\">\n\n      <li class=\"nav-item right \" *ngIf=\"!loggedIn\" routerLinkActive=\"active\"\n      data-toggle=\"collapse\" data-target=\".navbar-collapse\">\n      <button class=\"btn btn-outline-light px-5 \"\n      routerLink=\"/login\">Login</button>\n      </li>\n\n      <li class=\"nav-item right\" *ngIf=\"loggedIn\">\n        <a class=\"nav-link\" [routerLink]=\"'/profile/'+ user.uid\">My Profile</a>\n      </li> \n\n      <li class=\"nav-item right\" *ngIf=\"loggedIn\">\n        <a class=\"nav-link\" routerLink=\"/\" (click)=\"logout()\">Log Out</a>\n      </li> \n    </ul>\n  </div>\n</nav>","import { Component, OnInit } from '@angular/core';\nimport * as firebase from 'firebase/app';\nimport 'firebase/auth';\nimport 'firebase/firestore';\n\n@Component({\n  selector: 'app-myblogs',\n  templateUrl: './myblogs.component.html',\n  styleUrls: ['./myblogs.component.css']\n})\nexport class MyblogsComponent implements OnInit {\n\n  user:any={};\n  posts:any[] = [];\n\n  constructor() { \n\n    this.user = firebase.auth().currentUser;\n    this.getPosts();\n  }\n\n  ngOnInit(): void {\n\n  }\n  getPosts(){\n    // get the list of posts\n    firebase.firestore().collection(\"posts\")\n    .orderBy(\"created\",\"desc\")\n    .get().then(\n      (querySnapshot)=>\n      {\n        console.log(querySnapshot.docs);\n        this.posts = querySnapshot.docs;\n      }).catch((err)=>\n      {\n        console.log(err);\n      })\n  }\n  onPostCreated(){\n    // refresh the list of posts\n\n    this.getPosts();\n    this.posts = [];\n  }\n  onDelete(){\n    // refresh the list of posts\n    this.posts = [];\n    this.getPosts();\n    \n\n  }\n\n}\n","<div class=\"row mb-5\">\n    <div class=\"col-sm-3 offset-sm-1\">\n  \n      <div class=\"card mt-5\">\n        <img class=\"card-img-top\" [src]=\"user.photoURL\">\n        <div class=\"card-body\">\n          <h4 class=\"card-title\">{{ user.displayName }}</h4>\n          <a routerLink=\"/edit-profile/{{user.uid}}\" class=\"btn btn-sm btn-primary\">Edit Profile</a>\n        </div>\n      </div>\n  \n    </div>\n  \n    <div class=\"col-sm-7\">\n        <app-create (postCreated)=\"onPostCreated()\"></app-create>\n        <app-post *ngFor=\"let post of posts\"[post]=\"post\" (onDelete)=\"onDelete()\"></app-post>\n      \n    </div>\n  \n  </div>","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\nimport * as firebase from 'firebase/app';\nimport 'firebase/auth';\nimport 'firebase/firestore';\n\n@Component({\n  selector: 'app-post',\n  templateUrl: './post.component.html',\n  styleUrls: ['./post.component.css']\n})\nexport class PostComponent implements OnInit {\n\n  @Input('post') post: any;\n  @Output('onDelete') onDelete = new EventEmitter();\n\n  postData: any = {};\n  user: any = {};\n\n  constructor() { }\n\n  ngOnInit() {\n    this.postData = this.post.data();\n    this.user = firebase.auth().currentUser;\n  }\n\n  delete(){\n\n    firebase.firestore().collection(\"posts\").doc(this.post.id).delete().then(() => {\n      this.onDelete.emit();\n    });\n\n  }\n\n}","<div class=\"card text-blank mt-3\">\n    <div class=\"card-body\">\n      <div class=\"card-title\">\n        <h2>{{ postData.title }}</h2>\n      </div>\n  \n      <div class=\"card-text\">\n        {{ postData.content.substring(0, 50) }}...<a class=\"card-link\"\n        routerLink=\"/view/{{post.id}}\">Read More</a>\n      </div>\n  \n    </div>\n  \n    <div class=\"card-footer text-muted\">\n      Posted on {{ postData.created.toDate() | date: 'MMM dd, yyyy' }}\n  \n      <button type=\"button\" class=\"btn btn-danger card-link btn-sm float-right\"\n       *ngIf=\"user && user.uid == postData.owner\" (click)=\"delete()\">Delete</button>\n  \n    </div>\n  \n    <a class=\"card-footer text-muted\" *ngIf=\"(user && postData.owner != user.uid) || !user\"\n     routerLink=\"/profile/{{postData.owner}}\">\n      View Writer's Profile\n    </a>\n  \n  </div>","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport * as firebase from 'firebase/app';\nimport 'firebase/firestore';\n\n@Component({\n  selector: 'app-profile',\n  templateUrl: './profile.component.html',\n  styleUrls: ['./profile.component.css']\n})\nexport class ProfileComponent implements OnInit {\n\n  user: any = {};\n  posts: any[] = [];\n \n  constructor(public activatedRoute: ActivatedRoute) { \n\n    let id = this.activatedRoute.snapshot.paramMap.get('id');\n    console.log(id);\n\n    this.getProfile(id);\n    this.getUsersPosts(id);\n\n  }\n\n  ngOnInit() {\n  }\n\n  getProfile(id: string){\n\n    firebase.firestore().settings({\n      timestampsInSnapshots: true\n    })\n\n    firebase.firestore().collection(\"users\").doc(id).get().then((documentSnapshot) => {\n\n      this.user = documentSnapshot.data();\n      this.user.displayName = this.user.firstName + \" \" + this.user.lastName;\n      this.user.id = documentSnapshot.id;\n      this.user.hobbies = this.user.hobbies.split(\",\");\n      console.log(this.user);\n\n    }).catch((error) => {\n      console.log(error);\n    })\n\n  }\n\n  getUsersPosts(id: string){\n    firebase.firestore().collection(\"posts\")\n    .where(\"owner\",\"==\", id).get().then((data)=>{\n      \n      this.posts = data.docs;\n\n    })\n  }\n\n}","<div class=\"row\">\n    <div class=\"offset-sm-1 col-sm-10\">\n      <div class=\"card text-blank\">\n        <div class=\"card-body\">\n          <div class=\"card-title text-center\">\n            <h3>Profile</h3>\n          </div>\n          <hr/>\n          <div class=\"card-text\">\n            <div class=\"row\">\n              <div class=\"col-sm-3 text-center\">\n                <img [src]=\"user.photoURL\" height=\"256\" width=\"256\" class=\"img-circle\">\n              </div>\n  \n              <div class=\"col-sm-9\">\n                <h1>{{ user.firstName + ' ' + user.lastName }}</h1>\n  \n                <h4>{{ user.email }}</h4>\n  \n                <h5>{{ user.bio }}</h5>\n  \n                <p>{{ user.interests }}</p>\n  \n                <span class=\"badge badge-pill badge-primary badge-lg ml-3\" *ngFor=\"let hobby of user.hobbies\">\n                  {{ hobby }}\n                </span>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n  \n  <div class=\"row\">\n    <div class=\"offset-sm-1 col-sm-10\">\n      <div class=\"card text-blank\">\n        <div class=\"card-body\">\n          <div class=\"card-title\">\n            <h3>Posts by {{user.last_name}}  ({{posts.length}})</h3>\n          </div>\n          <div class=\"card-text\">\n            <app-post *ngFor=\"let post of posts\" [post]=\"post\"></app-post>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>","import { Component, OnInit } from '@angular/core';\nimport{ FormBuilder, FormGroup, FormControl, Validators}  from '@angular/forms';\nimport { AuthService} from '../auth.service';\nimport { stringify } from 'querystring';\nimport * as firebase from 'firebase/app';\nimport 'firebase/auth';\nimport 'firebase/firestore';\n@Component({\n  selector: 'app-signup',\n  templateUrl: './signup.component.html',\n  styleUrls: ['./signup.component.css']\n})\nexport class SignupComponent implements OnInit {\n\n  myForm: FormGroup;\n  pass:string;\n  cpass:string;\n  message:string=\"\";\n  userError:any;\n\n\n  constructor(public fb:FormBuilder,public authService: AuthService) { \n    this.myForm = this.fb.group({\n      firstName: ['',[Validators.required]],\n      lastName: ['',[Validators.required]],\n      email: ['',[Validators.required]],\n      password: ['',[Validators.required,Validators.minLength(8)]],\n      confirmPassword: ['',[Validators.required]]\n    })\n   \n  }\n \n\n  onSubmit(signupform){\n    let email: string = signupform.value.email;\n    let password: string = signupform.value.password;\n    let firstName: string = signupform.value.firstName;\n    let lastName: string = signupform.value.lastName;\n\n    this.authService.signup(email, password, firstName, lastName).then((user: any) => {\n\n      firebase.firestore().collection(\"users\").doc(user.uid).set({\n        firstName: signupform.value.firstName,\n        lastName: signupform.value.lastName,\n        email: signupform.value.email,\n        photoURL: user.photoURL,\n        interests: \"\",\n        bio: \"\",\n        hobbies: \"\"\n      }).then(() => {\n        this.message = \"You have been signed up successfully. Please login.\"\n      })\n      \n    \n    }).catch((error) => {\n      console.log(error);\n      this.userError = error;\n    })\n\n\n  }\n\n  ngOnInit() {\n  }\n\n}","<div class=\"row background\">\n    <div class=\"col-sm-6 background-left p-5 pb-5\">\n        <h1> Don't just think ! Blog It!</h1>\n    </div>\n\n    <div class=\"col-sm-6 background-right p-5 pb-5\">\n    <div class=\"row\">\n        <div class=\"offset-sm-2 col-sm-8\">\n            <div class=\"card text-blank border-0\">\n                <div class=\"card-body\">\n                    <div class=\"card-title text-center\">\n                        <h5>Sign up for free</h5>\n                    </div>\n                    <div class=\"card-text\">\n                        <form [formGroup]=\"myForm\" (ngSubmit)=\"onSubmit(myForm)\"> \n                            <div class=\"form-row\">\n                                <div class=\"form-group col-sm-6\">\n                                    <input type=\"text\" class=\"form-control\" placeholder=\"First Name\"\n                                    [formControl]=\"myForm.controls['firstName']\">\n                                </div>\n                                <div class=\"form-group col-sm-6\">\n                                    <input type=\"text\" class=\"form-control\" placeholder=\"Last Name\"\n                                    [formControl]=\"myForm.controls['lastName']\">\n                                </div>\n                            </div>\n                            <div class=\"alert alert-danger\" *ngIf=\"(!myForm.controls['firstName'].valid || !myForm.controls['lastName'].valid)\n                            && (myForm.controls['firstName'].touched || myForm.controls['lastName'].touched)\">\n                                First and Last name are required\n                            </div>\n\n                            <div class=\"form-group\">\n                            <input type=\"email\" placeholder=\"Enter your email\" class=\"form-control\"\n                            [formControl]=\"myForm.controls['email']\">\n                            <small class=\"form-text text-muted\">\n                                We'll never share your email with anyone else\n                            </small>\n                            <div class=\"alert alert-danger\" *ngIf=\"!myForm.controls['email'].valid && myForm.controls['email'].touched\">\n                                A valid email is  required\n                            </div>\n\n                            </div>\n                            <div class=\"form-group\">\n                                <input type=\"password\" class=\"form-control\" placeholder=\"Password\"\n                                [formControl]=\"myForm.controls['password']\" [(ngModel)]=\"pass\">\n                            </div>\n                            <div class=\"form-group\">\n                                <input type=\"password\" class=\"form-control\"  placeholder=\" Confirm Password\"\n                                [formControl]=\"myForm.controls['confirmPassword']\" [(ngModel)]=\"cpass\">\n                            </div>\n\n                            <div class=\"alert alert-danger\" *ngIf=\"!myForm.controls['password'].valid && myForm.controls['password'].touched\">\n                                Password Should by 8 Characters Long\n                            </div>\n                            <div class=\"alert alert-danger\" *ngIf=\"!(pass==cpass)\">\n                                Passwords do not match!!\n                            </div>\n                            \n                            \n                            <div class=\"text-center\">\n                                <button type=\"submit\" class=\"btn btn-block \n                                btn-warning\" [disabled]=\"!(myForm.valid && (pass==cpass))\">Submit</button>\n                            </div>\n                        </form>\n                       \n                        \n                    </div>\n                </div>\n            </div>\n            <div class=\"alert alert-success\" *ngIf=\"message.length>0\">\n                {{message}}\n            </div>\n            <div class=\"alert alert-danger\" *ngIf=\"userError\">\n                {{userError.message}}\n            </div>\n        </div>\n    </div>\n    </div>\n\n</div>\n\n","import { Component, OnInit, NgZone } from '@angular/core';\nimport * as firebase from 'firebase/app';\nimport 'firebase/firestore';\nimport { ActivatedRoute} from '@angular/router';\n\n@Component({\n  selector: 'app-view',\n  templateUrl: './view.component.html',\n  styleUrls: ['./view.component.css']\n})\nexport class ViewComponent implements OnInit {\n\n  post: any ={};\n  postId: string =\" \";\n  constructor( public activatedRoute: ActivatedRoute, public ngZone:NgZone) {\n\n    let postId = this.activatedRoute.snapshot.paramMap.get(\"postId\");\n    this.postId=postId;\n\n    firebase.firestore().collection(\"posts\").doc(postId).get().then\n  ((docSnapshot)=>{\n\n    this.ngZone.run(()=>\n    {\n    \n      this.post = docSnapshot.data();\n    console.log(this.post);\n    })\n    \n  }) }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"row mt-5\">\n    <div class=\"col-sm-8 offset-sm-2\">\n        <h1>{{ post.title}}</h1>\n        <div [innerHTML]=\"post.content\"></div>\n    </div>\n</div>\n\n<div class=\"row mt-5\">\n    <div  class=\"col-sm-8 offset-sm-2\">\n        <app-comments [postId]=\"postId\"></app-comments>\n    </div>\n</div>","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}