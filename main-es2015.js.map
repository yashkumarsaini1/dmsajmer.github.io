{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/auth.guard.ts","./src/app/auth.service.ts","./src/app/capitalize.pipe.ts","./src/app/comments/comments.component.ts","./src/app/comments/comments.component.html","./src/app/create/create.component.ts","./src/app/create/create.component.html","./src/app/edit-profile/edit-profile.component.ts","./src/app/edit-profile/edit-profile.component.html","./src/app/home/home.component.ts","./src/app/home/home.component.html","./src/app/login/login.component.ts","./src/app/login/login.component.html","./src/app/menu/menu.component.ts","./src/app/menu/menu.component.html","./src/app/myblogs/myblogs.component.ts","./src/app/myblogs/myblogs.component.html","./src/app/post/post.component.ts","./src/app/post/post.component.html","./src/app/profile/profile.component.ts","./src/app/profile/profile.component.html","./src/app/signup/signup.component.ts","./src/app/signup/signup.component.html","./src/app/view/view.component.ts","./src/app/view/view.component.html","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { LoginComponent } from './login/login.component';\nimport { HomeComponent } from './home/home.component';\nimport { MyblogsComponent } from './myblogs/myblogs.component';\nimport { ProfileComponent } from './profile/profile.component';\nimport { AuthGuard } from './auth.guard';\nimport { ViewComponent} from './view/view.component';\nimport {EditProfileComponent} from './edit-profile/edit-profile.component';\n\nconst routes: Routes = [{\n  path:'', redirectTo: 'home',pathMatch:'full'\n},{\n  path: 'home', component: HomeComponent\n},{\n  path: 'login', component: LoginComponent\n},{\n  path: 'myblogs',component: MyblogsComponent , canActivate:[AuthGuard]\n},{\n  path: 'edit-profile/:id',component: EditProfileComponent\n},{\n  path: 'profile/:id',component: ProfileComponent\n},{\n  path: 'view/:postId', component: ViewComponent \n},{\n  path: '**',redirectTo:'home'\n}]\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\n\n\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\n\nexport class AppComponent {\n  title = 'Scribe';\n}\n","<app-menu></app-menu>\n<router-outlet></router-outlet>\n<html>\n  <head>\n    <title>Scribe</title>\n  </head>\n  <body>\n  </body>\n</html>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport {FormsModule,ReactiveFormsModule} from '@angular/forms';\n\nimport * as firebase from 'firebase/app';\nimport 'firebase/auth';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { SignupComponent } from './signup/signup.component';\nimport { LoginComponent } from './login/login.component';\nimport { HomeComponent } from './home/home.component';\nimport { CapitalizePipe } from './capitalize.pipe';\nimport { MenuComponent } from './menu/menu.component';\nimport { MyblogsComponent } from './myblogs/myblogs.component';\nimport { ProfileComponent } from './profile/profile.component';\nimport { CreateComponent } from './create/create.component';\nimport { AngularEditorModule} from '@kolkov/angular-editor';\nimport { HttpClientModule} from '@angular/common/http';\nimport { PostComponent } from './post/post.component';\nimport { ViewComponent } from './view/view.component';\nimport { CommentsComponent } from './comments/comments.component';\nimport { EditProfileComponent } from './edit-profile/edit-profile.component';\n\nlet firebaseConfig = {\n  apiKey: \"AIzaSyBRJ1tEDwndXH_JgnABvlUmgScbOUBYPDc\",\n  authDomain: \"scribe-ed63b.firebaseapp.com\",\n  databaseURL: \"https://scribe-ed63b.firebaseio.com\",\n  projectId: \"scribe-ed63b\",\n  storageBucket: \"scribe-ed63b.appspot.com\",\n  messagingSenderId: \"474409021284\",\n  appId: \"1:474409021284:web:bc98dc6f77005b167b9471\",\n  measurementId: \"G-5QSYK64ZJM\"\n};\nfirebase.initializeApp(firebaseConfig);\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    SignupComponent,\n    LoginComponent,\n    HomeComponent,\n    CapitalizePipe,\n    MenuComponent,\n    MyblogsComponent,\n    ProfileComponent,\n    CreateComponent,\n    PostComponent,\n    ViewComponent,\n    CommentsComponent,\n    EditProfileComponent,\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    FormsModule,\n    ReactiveFormsModule,\n    AngularEditorModule,\n    HttpClientModule,          \n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Injectable } from '@angular/core';\nimport { CanActivate, ActivatedRouteSnapshot,\n   RouterStateSnapshot,UrlTree, Router } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport * as firebase from 'firebase/app';\nimport 'firebase/auth';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthGuard implements CanActivate {\n\n  constructor(private router: Router){}\n  canActivate(\n    next: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot): Observable<boolean | UrlTree> | Promise<boolean | UrlTree> | boolean | UrlTree {\n    \n      return new Promise((resole,reject)=>{\n        firebase.auth().onAuthStateChanged((user)=>{\n          if(user){\n            resole(true);\n          }\n          else{\n            this.router.navigate(['/login']);\n            resole(false);\n          }\n        })\n      })\n  }\n  \n}\n","import { Injectable } from '@angular/core';\nimport * as firebase from 'firebase/app';\nimport 'firebase/auth';\nimport { ReturnStatement } from '@angular/compiler';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n\n  constructor() { }\n\n  login(email:string, password:string){\n     return firebase.auth().signInWithEmailAndPassword(email,password);\n\n  }\n\n  signup(email:string, password:string,firstName:string,lastName:string){\n    \n\n    return new Promise((resolve, reject)=>{\n\n    firebase.auth().createUserWithEmailAndPassword(email,password).then(\n      (response)=> {\n        console.log(response);\n        let randomNumber=Math.floor(Math.random()*1000)\n\n        response.user.updateProfile({\n          displayName: firstName+\" \"+lastName,\n          photoURL:\"https://api.adorable.io/avatars/\"+ randomNumber\n        }).then(()=>\n        {\n          resolve(response.user);\n        }).catch((error)=>\n        {\n          reject(error);\n        })\n\n    }).catch((error)=>\n    {\n      reject(error);\n    })\n  })\n}\n}","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'capitalize'\n})\nexport class CapitalizePipe implements PipeTransform {\n\n  transform(value: string, ...args: unknown[]): unknown {\n    let firstChar = value.substring(0, 1);\n    let allOtherChars = value.substring(1,value.length);\n    let newValue = firstChar.toUpperCase()+allOtherChars.toLowerCase();\n    \n    return newValue;\n\n  }\n\n}\n","import { Component, OnInit, Input } from '@angular/core';\nimport * as firebase from 'firebase/app';\nimport 'firebase/auth';\nimport 'firebase/firestore';\n\n@Component({\n  selector: 'app-comments',\n  templateUrl: './comments.component.html',\n  styleUrls: ['./comments.component.css']\n})\nexport class CommentsComponent implements OnInit {\n\n  comment: string = \"\";\n  comments: any[] = [];\n  loggedIn: boolean = false;\n\n  @Input(\"postId\") postId: string;\n\n  constructor() { \n\n    firebase.auth().onAuthStateChanged((user) => {\n      if(user) {\n        this.loggedIn = true;\n      } else {\n        this.loggedIn = false;\n      }\n    })\n\n  }\n\n  ngOnInit() {\n    this.getComments();\n  }\n\n  postComment(){\n\n    if(this.comment.length < 5){\n      return;\n    }\n\n    firebase.firestore().collection(\"comments\").add({\n      text: this.comment,\n      post: this.postId,\n      owner: firebase.auth().currentUser.uid,\n      ownerName: firebase.auth().currentUser.displayName,\n      created: firebase.firestore.FieldValue.serverTimestamp()\n    }).then((data) => {\n      console.log(\"Comment is saved!\")\n      this.getComments();\n    }).catch((error) => {\n      console.log(error);\n    })\n\n  }\n\n  getComments(){\n\n    this.comments = [];\n\n    firebase.firestore().collection(\"comments\")\n    .where(\"post\", \"==\", this.postId)\n    .orderBy(\"created\", \"desc\")\n    .get().then((data) => {\n\n      data.docs.forEach((commentRef)=>{\n        this.comments.push(commentRef.data())\n      })\n\n    })\n\n  }\n\n\n}","<div class=\"row mt-5\" *ngIf=\"loggedIn\">\n    <div class=\"col\">\n      <textarea rows=\"2\" placeholder=\"Your comment here...\" [(ngModel)]=\"comment\"></textarea>\n    </div>\n  </div>\n  \n  <div class=\"row\" *ngIf=\"loggedIn\">\n    <div class=\"col\">\n      <div class=\"pull-right\">\n        <button class=\"btn btn-primary\" (click)=\"postComment()\">Post</button>\n      </div>\n    </div>\n  </div>\n  \n  <div class=\"alert alert-primary\" *ngIf=\"!loggedIn\">\n    Please login to post a comment.\n  </div> \n  \n  <h4>Comments ({{ comments.length }})</h4>\n  \n  <div class=\"row mt-3\" *ngFor=\"let comment of comments\">\n    <div class=\"col\">\n      <div class=\"card\">\n        <div class=\"card-header\">\n          {{ comment.ownerName }} <i>commented on </i> {{ comment.created.toDate() | date: 'MMM dd, yyyy h:mm a'}}\n        </div>\n        <div class=\"card-body\">\n          <div class=\"card-text\">\n            {{ comment.text }}\n          </div>\n        </div>\n      </div>\n  \n    </div>\n  </div>","import { Component, OnInit,Output,EventEmitter } from '@angular/core';\nimport * as firebase from 'firebase/app';\nimport 'firebase/firestore';\nimport 'firebase/auth';\nimport { AngularEditorConfig } from '@kolkov/angular-editor';\n\n\n@Component({\n  selector: 'app-create',\n  templateUrl: './create.component.html',\n  styleUrls: ['./create.component.css']\n})\nexport class CreateComponent implements OnInit {\n\n  editorConfig: any;\n  title: string;\n  content: string;\n  @Output('postCreated') postCreated = new EventEmitter();\n   \n\n  constructor() { \n    this.editorConfig = {\n      editable: true,\n        spellcheck: true,\n        height: 'auto',\n        minHeight: '0',\n        maxHeight: 'auto',\n        width: 'auto',\n        minWidth: '0',\n        translate: 'yes',\n        enableToolbar: true,\n        showToolbar: false,\n        placeholder: 'Enter text here...',\n        defaultParagraphSeparator: '',\n        defaultFontName: '',\n        defaultFontSize: '',\n        fonts: [\n          {class: 'arial', name: 'Arial'},\n          {class: 'times-new-roman', name: 'Times New Roman'},\n          {class: 'calibri', name: 'Calibri'},\n          {class: 'comic-sans-ms', name: 'Comic Sans MS'}\n        ],\n        customClasses: [\n        {\n          name: 'quote',\n          class: 'quote',\n        },\n        {\n          name: 'redText',\n          class: 'redText'\n        },\n        {\n          name: 'titleText',\n          class: 'titleText',\n          tag: 'h1',\n        },\n      ],\n      uploadUrl: 'v1/image',\n      uploadWithCredentials: false,\n      sanitize: true,\n      toolbarPosition: 'top',\n      toolbarHiddenButtons: [\n        ['bold', 'italic'],\n        ['fontSize']\n      ]\n  };\n    \n   }\n\n  ngOnInit() {\n  }\n\n  createPost(){\n\n    firebase.firestore().collection(\"posts\").add({\n      title: this.title,\n      content: this.content,\n      owner: firebase.auth().currentUser.uid,\n      created: firebase.firestore.FieldValue.serverTimestamp()\n    }).then((data) => {\n      console.log(data);\n      this.postCreated.emit();\n    }).catch((error) => {\n      console.log(error);\n    })\n\n  }\n\n}","<div class=\"row mt-5\">\n    <div class=\"col\">\n  \n      <div class=\"form-group\">\n        <label>Post Title</label>\n        <input type=\"text\" class=\"form-control\" id=\"title\" placeholder=\"Post Title\" name=\"title\" [(ngModel)]=\"title\">\n      </div>\n  \n      <div class=\"form-group\">\n        <label>Post Content</label>\n        <angular-editor [placeholder]=\"'Enter text here...'\" [config]=editorConfig [(ngModel)]=\"content\"></angular-editor>\n    </div>\n  \n      <div class=\"form-group float-right\">\n        <button (click)=\"createPost()\" class=\"btn btn-warning round\">Submit</button>\n      </div>\n  \n    </div>\n  </div>","import { Component, OnInit } from '@angular/core';\nimport * as firebase from 'firebase/app';\nimport 'firebase/firestore';\nimport 'firebase/auth';\n\n@Component({\n  selector: 'app-edit-profile',\n  templateUrl: './edit-profile.component.html',\n  styleUrls: ['./edit-profile.component.css']\n})\nexport class EditProfileComponent implements OnInit {\n\n  user: any = {};\n  message: string;\n\n  constructor() {\n    this.getProfile();\n  }\n\n  ngOnInit() {\n  }\n\n  getProfile(){\n\n    let userId = firebase.auth().currentUser.uid;\n\n    firebase.firestore().collection(\"users\").doc(userId).get().then((documentSnapshot) => {\n\n      this.user = documentSnapshot.data();\n      this.user.displayName = this.user.firstName + \" \" + this.user.lastName;\n      this.user.id = documentSnapshot.id;\n      console.log(this.user);\n\n    }).catch((error) => {\n      console.log(error);\n    })\n\n  }\n\n  update(){\n\n    this.message = \"Updating Profile...\";\n\n    firebase.auth().currentUser.updateProfile({\n      displayName: this.user.displayName, photoURL: this.user.photoUrl\n    }).then(() => {\n\n      let userId = firebase.auth().currentUser.uid;\n      firebase.firestore().collection(\"users\").doc(userId).update({\n        firstName: this.user.displayName.split(' ')[0],\n        lastName: this.user.displayName,\n        hobbies: this.user.hobbies,\n        interests: this.user.interests,\n        bio: this.user.bio\n      }).then(() => {\n\n        this.message = \"Profile Updated Successfully.\";\n\n      }).catch((error) => {\n        console.log(error)\n      })\n\n\n    }).catch((error) => {\n      console.log(error)\n    })\n\n  }\n\n}","<div class=\"row mt-5\">\n    <div class=\"offset-sm-1 col-sm-10\">\n      <div class=\"card-text-blank bg-light\">\n        <div class=\"card-body\">\n          <div class=\"card-title\">\n            <h1>Profile</h1>\n          </div>\n          <div class=\"card-text\">\n            <div class=\"row\">\n              <div class=\"col-sm-4\">\n                <img [src]=\"user.photoURL\" width=\"256\" height=\"256\" class=\"img-circle\">\n              </div>\n              <div class=\"col-sm-8\">\n                <div class=\"form-group row\">\n                  <label class=\"col-sm-2 col-form-label\">Name</label>\n                  <div class=\"col-sm-8\">\n                    <input type=\"text\" class=\"form-control\" placeholder=\"First name\" [(ngModel)]=\"user.displayName\">\n                  </div>\n                </div>\n  \n                <div class=\"form-group row\">\n                  <label class=\"col-sm-2 col-form-label\">Email</label>\n                  <div class=\"col-sm-8\">\n                    <input type=\"email\" readonly class=\"form-control\" [(ngModel)]=\"user.email\">\n                  </div>\n                </div>\n  \n                <div class=\"form-group row\">\n                  <label class=\"col-sm-2 col-form-label\">Bio</label>\n                  <div class=\"col-sm-8\">\n                    <textarea class=\"form-control\" rows=6 placeholder=\"Tell us something about yourself...\" [(ngModel)]=\"user.bio\"></textarea>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n  \n  <div class=\"row\">\n    <div class=\"offset-sm-1 col-sm-10\">\n      <div class=\"card text-blank bg-light\">\n        <div class=\"card-body\">\n          <div class=\"card-text\">\n            <div class=\"row\">\n              <div class=\"col-sm-6\">\n                <div class=\"form-group\">\n                  <label class=\"col-form-label\">Your Interests</label>\n                  <div class=\"col-sm-12\">\n                    <textarea class=\"form-control\" rows=6 placeholder=\"I like to read sci-fi novels...\" [(ngModel)]=\"user.interests\"></textarea>\n                  </div>\n                </div>\n              </div>\n              <div class=\"col-sm-6\">\n                <div class=\"form-group\">\n                  <label class=\"col-form-label\">Your Hobbies <small><i>(Comma Separate Each Hobby)</i></small></label>\n                  <div class=\"col-sm-12\">\n                    <textarea class=\"form-control\" rows=6 placeholder=\"Reading, Travelling, Gaming\" [(ngModel)]=\"user.hobbies\"></textarea>\n                  </div>\n                </div>\n              </div>\n            </div>\n  \n          </div>\n          \n          <button class=\"btn btn-warning round pull-right\" (click)=\"update()\">Update</button>\n          <div class=\"alert alert-success fade show pull-left\" role=\"alert\" *ngIf=\"message\">\n              {{message}}\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n\n  name: string=\"iNteNsHala\";\n  amount: number=123456;\n  dateOfBirth=new Date();\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<app-signup></app-signup>\r\n\r\n<div class=\"row\">\r\n  <div class=\"col-sm-6 text-right pt-5\">\r\n    <img class=\"align-middle m-5\" height=\"300px\" src=\"/assets/What-Is-Scribe-Image.png\">\r\n  </div>\r\n  <div class=\"col-sm-4\">\r\n    <h2 class=\"mx-5 my-5\">What is Scribe?</h2>\r\n    <h6 class=\"mx-5 my-1\">\r\n      Scribe is a thought sharing platform where you can share your thoughts and craziest\r\n       ideas with the world. You can also interact with\r\n        other users by commenting on their posts. \r\n      <br/><br/>\r\n      Create a free account and get started.\r\n      <br/><br/>\r\n      Let's get started!\r\n    </h6>\r\n  </div>\r\n</div>\r\n\r\n<hr/>\r\n\r\n<div class=\"row\">\r\n  <div class=\"offset-sm-2 col-sm-8 text-center pt-5 mt-5\">\r\n    <h5>Contact Us</h5>\r\n\r\n    <div class=\"row\">\r\n      <div class=\"offset-sm-2 col-sm-4 text-left pt-5 vertical-divider mt-5 \">\r\n        <i class=\"fa fa-phone mt-3\"></i> Available Soon...\r\n        <br/>\r\n        <i class=\"fa fa-envelope mt-3\"></i> yashallendms@gmail.com\r\n        <br/>\r\n        <i class=\"fa fa-facebook mt-3\"></i> Internshala Trainings\r\n        <br/>\r\n      </div>\r\n\r\n      <div class=\"col-sm-6 text-left py-5 my-5 px-5\">\r\n        <i class=\"fa fa-map-marker mt-3\"></i> Available Soon...<br/>\r\n        <i class=\"fa fa-map-marker mt-1 invisible\"></i> Available Soon...<br/>\r\n        <i class=\"fa fa-map-marker mt-1 invisible\"></i> Available Soon...<br/>\r\n        <i class=\"fa fa-map-marker mt-1 invisible\"></i> Available Soon...<br/>\r\n      </div>\r\n    </div>\r\n\r\n  </div>\r\n</div>","import { Component, OnInit } from '@angular/core'; \nimport{ FormBuilder, FormGroup, FormControl, Validators}  from '@angular/forms';\nimport { AuthService} from '../auth.service';\nimport {Router} from '@angular/router';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n  \n  myForm: FormGroup;\n  message: string=\"\";\n  userError: any;\n\n\n  constructor(public fb: FormBuilder, public authService: AuthService,\n    public router: Router) {\n    this.myForm= this.fb.group({\n      email: [\"\",Validators.required],\n      password: [\"\",Validators.required]\n    })\n   }\n\n  ngOnInit(): void {\n  }\n  onSubmit(form){\n    this.authService.login(form.value.email, form.value.password)\n    .then((data)=>{\n      console.log(data);\n      this.message=\"You have been logged in successfully.\"\n\n      this.router.navigate(['/myblogs'])\n    }).catch((error)=>\n    {\n      console.log(error);\n      this.userError=error;\n    })\n  }\n\n}\n","    <div class=\"row background\">\n    <div class=\"offset-sm-4 col-sm-4\">\n\n        <div class=\"card text-blank\">\n            <div class=\"card-body\">\n                <div class=\"card-title text-center\">\n                    <h5>Login using your email</h5>\n                </div>\n                <form [formGroup]=\"myForm\" (ngSubmit)=\"onSubmit(myForm)\">\n                    <div class=\"form-group\">\n                        <input type=\"email\" class=\"form-control\" placeholder=\"Enter email\" name=\"email\"\n                        [formControl]=\"myForm.controls['email']\">\n                    </div>\n                    <div class=\"alert alert-danger\" *ngIf=\"!myForm.controls['email'].valid && myForm.controls['email'].touched\">\n                        A valid Email is required.\n                    </div>\n                    <div class=\"form-group\">\n                        <input type=\"password\" class=\"form-control\" placeholder=\"Enter password\" name=\"password\"\n                        [formControl]=\"myForm.controls['password']\">\n                    </div>\n                    <div class=\"alert alert-danger\" *ngIf=\"!myForm.controls['password'].valid && myForm.controls['password'].touched\">\n                        Password is required.\n                    </div>\n                    <div class=\"text-center\">\n                        <button type=\"submit\" class=\"btn btn-block btn-warning round\" [disabled]=\"!myForm.valid\">Submit</button>\n                    </div>\n\n                </form>\n                <div class=\"text-center mt-3\">\n                    <button class=\"btn btn-link\" routerLink=\"/home\">Don't have an\n                    account? Create One</button>\n                    <br><br><br><br><br><br><br><br>\n                </div>\n            </div>\n            <div class=\"alert alert-success\" *ngIf=\"message.length> 0\"> \n                {{message}}\n            </div>\n            <div class=\"alert alert-danger\" *ngIf=\"userError\">\n                {{userError.message}}\n            </div>\n        </div>\n    </div>\n    \n</div>\n\n\n","import { Component, OnInit } from '@angular/core';\nimport * as firebase from 'firebase/app';\nimport 'firebase/auth';\n\n@Component({\n  selector: 'app-menu',\n  templateUrl: './menu.component.html',\n  styleUrls: ['./menu.component.css']\n})\nexport class MenuComponent implements OnInit {\n\n  loggedIn: boolean = false;\n  user: any;\n\n  constructor() {\n\n    this.user = firebase.auth().currentUser;\n    if(this.user) {\n      this.loggedIn = true;\n    } else {\n      this.loggedIn = false;\n    }\n\n    firebase.auth().onAuthStateChanged((user) => {\n      this.user = user;\n      if(user){\n        this.loggedIn = true;\n      } else {\n        this.loggedIn = false;\n      }\n\n    })\n\n  }\n\n  ngOnInit() {\n  }\n\n  logout(){\n    firebase.auth().signOut();\n  }\n\n}","<nav class=\"navbar navbar-expand-lg navbar-light bg-primary\">\n  <a class=\"navbar-brand\" href=\"#\">\n    <img src=\"assets/Scribe-Logo.png\">\n  </a>\n  <button class=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" \n  data-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\"\n   aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n    <span class=\"navbar-toggler-icon\"></span>\n  </button>\n  <div class=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\n    <ul class=\"navbar-nav mr-auto\">\n\n      <li class=\"nav-item\" routerLinkActive=\"active\" data-toggle=\"collapse\"\n      data-target=\".navbar-collapse\" *ngIf=\"!loggedIn\">\n        <a class=\"nav-link\" routerLink=\"/home\">Home </a>\n      </li>\n      <li class=\"nav-item\" routerLinkActive=\"active\" data-toggle=\"collapse\"\n      data-target=\".navbar-collapse\" *ngIf=\"loggedIn\">\n        <a class=\"nav-link\" routerLink=\"/myblogs\">Home</a>\n      </li>\n    </ul>\n\n    <ul class=\"navbar-nav ml-auto\">\n\n      <li class=\"nav-item right \" *ngIf=\"!loggedIn\" routerLinkActive=\"active\"\n      data-toggle=\"collapse\" data-target=\".navbar-collapse\">\n      <button class=\"btn btn-outline-light px-5 \"\n      routerLink=\"/login\">Login</button>\n      </li>\n\n      <li class=\"nav-item right\" *ngIf=\"loggedIn\">\n        <a class=\"nav-link\" [routerLink]=\"'/profile/'+ user.uid\">My Profile</a>\n      </li> \n\n      <li class=\"nav-item right\" *ngIf=\"loggedIn\">\n        <a class=\"nav-link\" routerLink=\"/\" (click)=\"logout()\">Log Out</a>\n      </li> \n    </ul>\n  </div>\n</nav>","import { Component, OnInit } from '@angular/core';\nimport * as firebase from 'firebase/app';\nimport 'firebase/auth';\nimport 'firebase/firestore';\n\n@Component({\n  selector: 'app-myblogs',\n  templateUrl: './myblogs.component.html',\n  styleUrls: ['./myblogs.component.css']\n})\nexport class MyblogsComponent implements OnInit {\n\n  user:any={};\n  posts:any[] = [];\n\n  constructor() { \n\n    this.user = firebase.auth().currentUser;\n    this.getPosts();\n  }\n\n  ngOnInit(): void {\n\n  }\n  getPosts(){\n    // get the list of posts\n    firebase.firestore().collection(\"posts\")\n    .orderBy(\"created\",\"desc\")\n    .get().then(\n      (querySnapshot)=>\n      {\n        console.log(querySnapshot.docs);\n        this.posts = querySnapshot.docs;\n      }).catch((err)=>\n      {\n        console.log(err);\n      })\n  }\n  onPostCreated(){\n    // refresh the list of posts\n\n    this.getPosts();\n    this.posts = [];\n  }\n  onDelete(){\n    // refresh the list of posts\n    this.posts = [];\n    this.getPosts();\n    \n\n  }\n\n}\n","<div class=\"row mb-5\">\n    <div class=\"col-sm-3 offset-sm-1\">\n  \n      <div class=\"card mt-5\">\n        <img class=\"card-img-top\" [src]=\"user.photoURL\">\n        <div class=\"card-body\">\n          <h4 class=\"card-title\">{{ user.displayName }}</h4>\n          <a routerLink=\"/edit-profile/{{user.uid}}\" class=\"btn btn-sm btn-primary\">Edit Profile</a>\n        </div>\n      </div>\n  \n    </div>\n  \n    <div class=\"col-sm-7\">\n        <app-create (postCreated)=\"onPostCreated()\"></app-create>\n        <app-post *ngFor=\"let post of posts\"[post]=\"post\" (onDelete)=\"onDelete()\"></app-post>\n      \n    </div>\n  \n  </div>","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\nimport * as firebase from 'firebase/app';\nimport 'firebase/auth';\nimport 'firebase/firestore';\n\n@Component({\n  selector: 'app-post',\n  templateUrl: './post.component.html',\n  styleUrls: ['./post.component.css']\n})\nexport class PostComponent implements OnInit {\n\n  @Input('post') post: any;\n  @Output('onDelete') onDelete = new EventEmitter();\n\n  postData: any = {};\n  user: any = {};\n\n  constructor() { }\n\n  ngOnInit() {\n    this.postData = this.post.data();\n    this.user = firebase.auth().currentUser;\n  }\n\n  delete(){\n\n    firebase.firestore().collection(\"posts\").doc(this.post.id).delete().then(() => {\n      this.onDelete.emit();\n    });\n\n  }\n\n}","<div class=\"card text-blank mt-3\">\n    <div class=\"card-body\">\n      <div class=\"card-title\">\n        <h2>{{ postData.title }}</h2>\n      </div>\n  \n      <div class=\"card-text\">\n        {{ postData.content.substring(0, 50) }}...<a class=\"card-link\"\n        routerLink=\"/view/{{post.id}}\">Read More</a>\n      </div>\n  \n    </div>\n  \n    <div class=\"card-footer text-muted\">\n      Posted on {{ postData.created.toDate() | date: 'MMM dd, yyyy' }}\n  \n      <button type=\"button\" class=\"btn btn-danger card-link btn-sm float-right\"\n       *ngIf=\"user && user.uid == postData.owner\" (click)=\"delete()\">Delete</button>\n  \n    </div>\n  \n    <a class=\"card-footer text-muted\" *ngIf=\"(user && postData.owner != user.uid) || !user\"\n     routerLink=\"/profile/{{postData.owner}}\">\n      View Writer's Profile\n    </a>\n  \n  </div>","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport * as firebase from 'firebase/app';\nimport 'firebase/firestore';\n\n@Component({\n  selector: 'app-profile',\n  templateUrl: './profile.component.html',\n  styleUrls: ['./profile.component.css']\n})\nexport class ProfileComponent implements OnInit {\n\n  user: any = {};\n  posts: any[] = [];\n \n  constructor(public activatedRoute: ActivatedRoute) { \n\n    let id = this.activatedRoute.snapshot.paramMap.get('id');\n    console.log(id);\n\n    this.getProfile(id);\n    this.getUsersPosts(id);\n\n  }\n\n  ngOnInit() {\n  }\n\n  getProfile(id: string){\n\n    firebase.firestore().settings({\n      timestampsInSnapshots: true\n    })\n\n    firebase.firestore().collection(\"users\").doc(id).get().then((documentSnapshot) => {\n\n      this.user = documentSnapshot.data();\n      this.user.displayName = this.user.firstName + \" \" + this.user.lastName;\n      this.user.id = documentSnapshot.id;\n      this.user.hobbies = this.user.hobbies.split(\",\");\n      console.log(this.user);\n\n    }).catch((error) => {\n      console.log(error);\n    })\n\n  }\n\n  getUsersPosts(id: string){\n    firebase.firestore().collection(\"posts\")\n    .where(\"owner\",\"==\", id).get().then((data)=>{\n      \n      this.posts = data.docs;\n\n    })\n  }\n\n}","<div class=\"row\">\n    <div class=\"offset-sm-1 col-sm-10\">\n      <div class=\"card text-blank\">\n        <div class=\"card-body\">\n          <div class=\"card-title text-center\">\n            <h3>Profile</h3>\n          </div>\n          <hr/>\n          <div class=\"card-text\">\n            <div class=\"row\">\n              <div class=\"col-sm-3 text-center\">\n                <img [src]=\"user.photoURL\" height=\"256\" width=\"256\" class=\"img-circle\">\n              </div>\n  \n              <div class=\"col-sm-9\">\n                <h1>{{ user.firstName + ' ' + user.lastName }}</h1>\n  \n                <h4>{{ user.email }}</h4>\n  \n                <h5>{{ user.bio }}</h5>\n  \n                <p>{{ user.interests }}</p>\n  \n                <span class=\"badge badge-pill badge-primary badge-lg ml-3\" *ngFor=\"let hobby of user.hobbies\">\n                  {{ hobby }}\n                </span>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n  \n  <div class=\"row\">\n    <div class=\"offset-sm-1 col-sm-10\">\n      <div class=\"card text-blank\">\n        <div class=\"card-body\">\n          <div class=\"card-title\">\n            <h3>Posts by {{user.last_name}}  ({{posts.length}})</h3>\n          </div>\n          <div class=\"card-text\">\n            <app-post *ngFor=\"let post of posts\" [post]=\"post\"></app-post>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>","import { Component, OnInit } from '@angular/core';\nimport{ FormBuilder, FormGroup, FormControl, Validators}  from '@angular/forms';\nimport { AuthService} from '../auth.service';\nimport { stringify } from 'querystring';\nimport * as firebase from 'firebase/app';\nimport 'firebase/auth';\nimport 'firebase/firestore';\n@Component({\n  selector: 'app-signup',\n  templateUrl: './signup.component.html',\n  styleUrls: ['./signup.component.css']\n})\nexport class SignupComponent implements OnInit {\n\n  myForm: FormGroup;\n  pass:string;\n  cpass:string;\n  message:string=\"\";\n  userError:any;\n\n\n  constructor(public fb:FormBuilder,public authService: AuthService) { \n    this.myForm = this.fb.group({\n      firstName: ['',[Validators.required]],\n      lastName: ['',[Validators.required]],\n      email: ['',[Validators.required]],\n      password: ['',[Validators.required,Validators.minLength(8)]],\n      confirmPassword: ['',[Validators.required]]\n    })\n   \n  }\n \n\n  onSubmit(signupform){\n    let email: string = signupform.value.email;\n    let password: string = signupform.value.password;\n    let firstName: string = signupform.value.firstName;\n    let lastName: string = signupform.value.lastName;\n\n    this.authService.signup(email, password, firstName, lastName).then((user: any) => {\n\n      firebase.firestore().collection(\"users\").doc(user.uid).set({\n        firstName: signupform.value.firstName,\n        lastName: signupform.value.lastName,\n        email: signupform.value.email,\n        photoURL: user.photoURL,\n        interests: \"\",\n        bio: \"\",\n        hobbies: \"\"\n      }).then(() => {\n        this.message = \"You have been signed up successfully. Please login.\"\n      })\n      \n    \n    }).catch((error) => {\n      console.log(error);\n      this.userError = error;\n    })\n\n\n  }\n\n  ngOnInit() {\n  }\n\n}","<div class=\"row background\">\n    <div class=\"col-sm-6 background-left p-5 pb-5\">\n        <h1> Don't just think ! Blog It!</h1>\n    </div>\n\n    <div class=\"col-sm-6 background-right p-5 pb-5\">\n    <div class=\"row\">\n        <div class=\"offset-sm-2 col-sm-8\">\n            <div class=\"card text-blank border-0\">\n                <div class=\"card-body\">\n                    <div class=\"card-title text-center\">\n                        <h5>Sign up for free</h5>\n                    </div>\n                    <div class=\"card-text\">\n                        <form [formGroup]=\"myForm\" (ngSubmit)=\"onSubmit(myForm)\"> \n                            <div class=\"form-row\">\n                                <div class=\"form-group col-sm-6\">\n                                    <input type=\"text\" class=\"form-control\" placeholder=\"First Name\"\n                                    [formControl]=\"myForm.controls['firstName']\">\n                                </div>\n                                <div class=\"form-group col-sm-6\">\n                                    <input type=\"text\" class=\"form-control\" placeholder=\"Last Name\"\n                                    [formControl]=\"myForm.controls['lastName']\">\n                                </div>\n                            </div>\n                            <div class=\"alert alert-danger\" *ngIf=\"(!myForm.controls['firstName'].valid || !myForm.controls['lastName'].valid)\n                            && (myForm.controls['firstName'].touched || myForm.controls['lastName'].touched)\">\n                                First and Last name are required\n                            </div>\n\n                            <div class=\"form-group\">\n                            <input type=\"email\" placeholder=\"Enter your email\" class=\"form-control\"\n                            [formControl]=\"myForm.controls['email']\">\n                            <small class=\"form-text text-muted\">\n                                We'll never share your email with anyone else\n                            </small>\n                            <div class=\"alert alert-danger\" *ngIf=\"!myForm.controls['email'].valid && myForm.controls['email'].touched\">\n                                A valid email is  required\n                            </div>\n\n                            </div>\n                            <div class=\"form-group\">\n                                <input type=\"password\" class=\"form-control\" placeholder=\"Password\"\n                                [formControl]=\"myForm.controls['password']\" [(ngModel)]=\"pass\">\n                            </div>\n                            <div class=\"form-group\">\n                                <input type=\"password\" class=\"form-control\"  placeholder=\" Confirm Password\"\n                                [formControl]=\"myForm.controls['confirmPassword']\" [(ngModel)]=\"cpass\">\n                            </div>\n\n                            <div class=\"alert alert-danger\" *ngIf=\"!myForm.controls['password'].valid && myForm.controls['password'].touched\">\n                                Password Should by 8 Characters Long\n                            </div>\n                            <div class=\"alert alert-danger\" *ngIf=\"!(pass==cpass)\">\n                                Passwords do not match!!\n                            </div>\n                            \n                            \n                            <div class=\"text-center\">\n                                <button type=\"submit\" class=\"btn btn-block \n                                btn-warning\" [disabled]=\"!(myForm.valid && (pass==cpass))\">Submit</button>\n                            </div>\n                        </form>\n                       \n                        \n                    </div>\n                </div>\n            </div>\n            <div class=\"alert alert-success\" *ngIf=\"message.length>0\">\n                {{message}}\n            </div>\n            <div class=\"alert alert-danger\" *ngIf=\"userError\">\n                {{userError.message}}\n            </div>\n        </div>\n    </div>\n    </div>\n\n</div>\n\n","import { Component, OnInit, NgZone } from '@angular/core';\nimport * as firebase from 'firebase/app';\nimport 'firebase/firestore';\nimport { ActivatedRoute} from '@angular/router';\n\n@Component({\n  selector: 'app-view',\n  templateUrl: './view.component.html',\n  styleUrls: ['./view.component.css']\n})\nexport class ViewComponent implements OnInit {\n\n  post: any ={};\n  postId: string =\" \";\n  constructor( public activatedRoute: ActivatedRoute, public ngZone:NgZone) {\n\n    let postId = this.activatedRoute.snapshot.paramMap.get(\"postId\");\n    this.postId=postId;\n\n    firebase.firestore().collection(\"posts\").doc(postId).get().then\n  ((docSnapshot)=>{\n\n    this.ngZone.run(()=>\n    {\n    \n      this.post = docSnapshot.data();\n    console.log(this.post);\n    })\n    \n  }) }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"row mt-5\">\n    <div class=\"col-sm-8 offset-sm-2\">\n        <h1>{{ post.title}}</h1>\n        <div [innerHTML]=\"post.content\"></div>\n    </div>\n</div>\n\n<div class=\"row mt-5\">\n    <div  class=\"col-sm-8 offset-sm-2\">\n        <app-comments [postId]=\"postId\"></app-comments>\n    </div>\n</div>","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}